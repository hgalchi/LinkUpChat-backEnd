name: Java CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Restore application-secret.yml
        run: |
          echo "${{ secrets.APPLICATION_SECRET }}" | base64 -d > ./src/main/resources/application-secret.yml
        shell: bash

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew


      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test


      - name: Set environment variables
        run: |
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "MONGO_HOST=${{secrets.MONGO_HOST}}" >> .env
          echo "MONGO_PORT=${{secrets.MONGO_PORT}}" >> .env
          echo "MONGO_DB=${{secrets.MONGO_DB}}" >> .env
          echo "MONGO_USERNAME=${{secrets.MONGO_USERNAME}}" >> .env
          echo "MONGO_PASSWORD=${{secrets.MONGO_PASSWORD}}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
        shell: bash

      - name: Verify .env file
        run: cat .env

      # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build --build-arg ENV_FILE=.env -t ${{ secrets.DOCKERHUB_USERNAME }}/linkupchat .

      # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 5. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/linkupchat

#      # docker deploy
#      - name: Docker Deploy executing remote ssh commands using ssh_key
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER}}
#          key: ${{ secrets.SSH_KEY }}
#          script: |
#            sudo docker ps
#            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/linkupchat
#            sudo docker stop linkupchat || true
#            sudo docker rm linkupchat || true
#            sudo docker run -d --name linkupchat --restart always -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/linkupchat
#            sudo docker image prune -f




